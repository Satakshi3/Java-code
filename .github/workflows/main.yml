name: Build and Deploy Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Maven Build
        run: mvn clean package
      
      - name: Run Unit Tests
        run: mvn test
      - name: Run Functional Tests
        run: mvn verify -Dtest=FunctionalTests

      - name: Run Performance Tests
        run: mvn verify -Dtest=PerformanceTests
      - name: SonarQube Scan
        run: mvn sonar:sonar -Dsonar.organization=your-org -Dsonar.projectKey=your-key -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      - name: Build Docker Image
        run: |
          docker build -t my-app:latest .
      - name: Publish to Nexus
        run: mvn deploy
        env:
          NEXUS_USERNAME: ${{ admin }}
          NEXUS_PASSWORD: ${{ nexus }}
      - name: Push to JFrog
        run: |
          docker login ${{ secrets.JFROG_URL }} -u ${{ secrets.JFROG_USERNAME }} -p ${{ secrets.JFROG_PASSWORD }}
          docker tag my-app:latest ${{ secrets.JFROG_URL }}/my-app:latest
          docker push ${{ secrets.JFROG_URL }}/my-app:latest
